- name: EC2 Create and Launch
  connection: local
  gather_facts: false
  hosts: local
  vars:
    count: 1
    image: ami-07d0cf3af28718ef8
    instance_type: t2.micro
    keypair: ansible
    region: us-east-1
    security_group: Nginx_SG
    instance_tags:
      Name: "nginx"
  vars_files:
    - vault.yml
  tasks:
   - name: Create security group
     ec2_group:
      name: "{{ security_group }}"
      description: Nginx webservers security group
      region: "{{ region }}"
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      tags:
        Name: "nginx"
      rules:
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
      rules_egress:
        - proto: all
          cidr_ip: 0.0.0.0/0

   - name: Launch new EC2 Instance
     ec2:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      group: "{{ security_group }}"
      instance_type: "{{ instance_type }}"
      image: "{{ image }}"
      wait: true
      region: "{{ region }}"
      keypair: "{{ keypair }}"
      count: "{{count}}"
      zone: us-east-1a
      instance_tags: "{{instance_tags}}"
     register: ec2

   - name: Add created host ip address to env.inventory
     add_host:
       name: "{{ item.public_ip }}"
       groups: nginx_servers
     with_items: "{{ ec2.instances }}"

   - name: Waiting for port 22 to become open and contain "OpenSSH"
     wait_for:
      port: 22
      host: "{{ item.public_ip }}"
      state: started
     with_items: "{{ ec2.instances }}"

- name: Install docker, pull nginx image, run nginx container with sample content
  hosts: nginx_servers
  remote_user: ubuntu
  become: yes
  vars:
    container_name: nginx
    container_image: nginx
    container_image_tag: latest
  gather_facts: no
  pre_tasks:
    - name: 'install python'
      raw: 'sudo apt-get -y update && sudo apt-get -y upgrade && sudo apt-get -y install python'
  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python-pip', 'virtualenv', 'python3-setuptools', 'python-apt']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Pull default Docker image
      docker_image:
        source: pull
        name: "{{ container_image }}"
        tag: "{{ container_image_tag }}"

    - name: Copy content directory for webserver
      copy:
        src: ./www
        dest: /var
        mode: '0755'
        owner: www-data
        group: www-data

    - name: Start Nginx container
      docker_container:
        name: "{{ container_name }}"
        image: "{{ container_image }}"
        volumes:
         - "/var/www:/usr/share/nginx/html:ro"
        published_ports:
         - "80:80"
        state: started
